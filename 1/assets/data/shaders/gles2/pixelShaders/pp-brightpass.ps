#include "../commons/defines.sh"
#include "../commons/uniforms.sh"
#include "../commons/varyings.sh"


uniform lowp float inversewidth;

const lowp vec3 BRIGHTNESS_TRESHOLD = vec3(0.15, 0.15, 0.15);

void main()
{
	lowp vec3 acc = vec3(0,0,0);
	
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(-inversewidth, inversewidth) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(0.0, inversewidth) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(inversewidth, inversewidth) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(-inversewidth, 0.0) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(inversewidth, 0.0) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(-inversewidth, -inversewidth)).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(0.0, -inversewidth) ).rgb;
	acc += texture2D(BASEMAP, V_TexCoord0 + vec2(inversewidth, -inversewidth) ).rgb;
	
	acc *= 0.1111111111111111111;
	
	acc = clamp(acc-BRIGHTNESS_TRESHOLD,0.0,1.0);
	
	lowp float luminance = texture2D(BASEMAP1, vec2(0.5,0.5)).r;
	
	acc /= acc+luminance;
	
	gl_FragColor = vec4(acc,1.0);
}
